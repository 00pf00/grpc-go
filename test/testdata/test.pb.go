// Code generated by protoc-gen-go.
// source: test.proto
// DO NOT EDIT!

/*
Package test is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	DivArgs
	DivReply
	FibArgs
	Num
	FibReply
*/
package test

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type DivArgs struct {
	Dividend         *int64 `protobuf:"varint,1,req,name=dividend" json:"dividend,omitempty"`
	Divisor          *int64 `protobuf:"varint,2,req,name=divisor" json:"divisor,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DivArgs) Reset()         { *m = DivArgs{} }
func (m *DivArgs) String() string { return proto.CompactTextString(m) }
func (*DivArgs) ProtoMessage()    {}

func (m *DivArgs) GetDividend() int64 {
	if m != nil && m.Dividend != nil {
		return *m.Dividend
	}
	return 0
}

func (m *DivArgs) GetDivisor() int64 {
	if m != nil && m.Divisor != nil {
		return *m.Divisor
	}
	return 0
}

type DivReply struct {
	Quotient         *int64 `protobuf:"varint,1,req,name=quotient" json:"quotient,omitempty"`
	Remainder        *int64 `protobuf:"varint,2,req,name=remainder" json:"remainder,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DivReply) Reset()         { *m = DivReply{} }
func (m *DivReply) String() string { return proto.CompactTextString(m) }
func (*DivReply) ProtoMessage()    {}

func (m *DivReply) GetQuotient() int64 {
	if m != nil && m.Quotient != nil {
		return *m.Quotient
	}
	return 0
}

func (m *DivReply) GetRemainder() int64 {
	if m != nil && m.Remainder != nil {
		return *m.Remainder
	}
	return 0
}

type FibArgs struct {
	Limit            *int64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FibArgs) Reset()         { *m = FibArgs{} }
func (m *FibArgs) String() string { return proto.CompactTextString(m) }
func (*FibArgs) ProtoMessage()    {}

func (m *FibArgs) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type Num struct {
	Num              *int64 `protobuf:"varint,1,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Num) Reset()         { *m = Num{} }
func (m *Num) String() string { return proto.CompactTextString(m) }
func (*Num) ProtoMessage()    {}

func (m *Num) GetNum() int64 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type FibReply struct {
	Count            *int64 `protobuf:"varint,1,req,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FibReply) Reset()         { *m = FibReply{} }
func (m *FibReply) String() string { return proto.CompactTextString(m) }
func (*FibReply) ProtoMessage()    {}

func (m *FibReply) GetCount() int64 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func init() {
}
